<!-- Include Alpine.js in your theme.liquid or layout file -->
<script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>

{% if customer %}
  <script>
    window.APP_URL = "{{ section.settings.app_url }}";
  </script>

  <div class="activation_cards">
    <!-- Left Card: Activation Form -->
    <div class="activate_card" x-data="activationForm" x-init="init()">
      <div class="flex flex-col space-y-1.5 p-6">
        <h3 class="font-semibold tracking-tight text-2xl">Activate your kit</h3>
        <p class="text-muted-foreground text-base">Please enter your kit ID to active your kit.</p>
      </div>
      <div class="p-6 pt-0 space-y-6">
        <form @submit.prevent="submit">
          <input type="hidden" x-model="customerId" value="{{ customer.id }}" />
          <div class="flex gap-3">
            <input 
              type="text" 
              x-model="code" 
              :readonly="hasExisting" 
              required 
              placeholder="Please enter your activation id..." 
              class="flex w-full rounded-md border border-input bg-background px-3 py-2 ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm flex-1 h-12 text-base"
            />
            <button 
              type="submit" 
              :disabled="submitting || hasExisting" 
              class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 text-primary-foreground hover:bg-primary/90 py-2 h-12 px-8 bg-gradient-primary hover:opacity-90 transition-opacity"
            >
              <span x-text="submitting ? 'Saving…' : 'Activate'"></span>
            </button>
          </div>
          <p x-show="message" x-text="message" class="mt-3 text-sm" :class="message.includes('Error') || message.includes('failed') ? 'text-red-600' : 'text-green-600'"></p>
        </form>

        <div class="bottom_card">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-play w-5 h-5 text-primary mt-0.5 flex-shrink-0">
            <circle cx="12" cy="12" r="10"></circle>
            <polygon points="10 8 16 12 10 16 10 8"></polygon>
          </svg>
          <div>
            <p class="font-medium text-foreground mb-1">Instructions for Intracellular NAD<sup>®</sup> test with dried blood spots</p>
            <p class="text-sm text-muted-foreground">Watch our step-by-step video guide to learn how to collect your sample correctly.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Right Card: Latest Samples (Empty) -->
    <div class="activate_card">
      <div class="flex flex-col space-y-1.5 p-6">
        <h3 class="font-semibold tracking-tight text-2xl">Latest Samples</h3>
      </div>
      <div class="p-6 pt-0">
        <div class="relative w-full overflow-auto">
          <table class="w-full caption-bottom text-sm">
            <thead class="[&_tr]:border-b">
              <tr class="border-b transition-colors data-[state=selected]:bg-muted hover:bg-muted/50">
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0">Patient</th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0">Sample ID</th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0">Code</th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0">Status</th>
              </tr>
            </thead>
            <tbody class="[&_tr:last-child]:border-0">
              <tr class="border-b transition-colors data-[state=selected]:bg-muted hover:bg-muted/50">
                <td class="p-4 align-middle [&:has([role=checkbox])]:pr-0 text-center py-8 text-muted-foreground" colspan="4">No records found.</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
{% else %}
  <div class="rounded-lg border bg-card text-card-foreground shadow-sm shadow-card p-6">
    <p class="text-center text-muted-foreground">Please Login First</p>
  </div>
{% endif %}

{% style %}
  .activation_cards {
    margin: 30px 0;
    display: flex;
    gap: 20px;
}

.activation_cards .activate_card {
    width: 49%;
    padding: 30px;
    border-radius: .75rem;
    border: 1px solid #e5e7eb;
}
.activate_card p{
    font-size:16px;
    color:#676f7e !important;
    margin:10px 0 20pxauto;
}
.activate_card h3 {
    font-size: 24px;
    color: #2b303b;
    font-weight: 600;
    margin: 10px 0;
}

.activate_card input{
    margin-right:10px;
    width:78%;
    padding:12px;
    font-size:15px;
    border-radius:10px;
    color:#2b303b;
    border:1px solid rgb(229, 231, 235) !important;
}
.activate_card button{
    border-radius:10px;
    font-size:15px;
    background: #7a5c43;
    color:white;
    padding:12px 20px;
    font-weight:600;
}

.bottom_card {
    margin:30px 0 0 0;
    padding:10px;
    border-radius:10px;
    background:#7a5c4312;
    font-weight: 700 !important;
    letter-spacing: 0px;
    font-family: Bai Jamjuree;
    display: inline-flex;
    gap:10px;
    justify-content: center;
    align-items: start;
    border: 0;
    padding: 2rem;
}

.bottom_card p{
    font-weight:500;
    font-size:15px;
    color:#676f7e;
    margin:0 !important;
    margin-bottom:10px !important;
}

{% endstyle %}
<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('activationForm', () => ({
      customerId: '',
      code: '',
      hasExisting: false,
      submitting: false,
      message: '',
      init() {
        const hidden = this.$el.querySelector('input[type="hidden"]');
        this.customerId = hidden ? hidden.value : '';
        this.code = `{{ customer.metafields.custom.activation_code | default: '' }}`;
        this.hasExisting = !!this.code;
      },
      async submit() {
        if (!this.code) { this.message = 'Please enter activation code'; return; }
        if (!this.customerId) { this.message = 'Please login first'; return; }
        this.submitting = true;
        this.message = '';
        try {
          const base = (window.APP_URL || 'https://health-report-activation.vercel.app');
          const shopDomain = '{{ shop.permanent_domain }}';
          const fd = new FormData();
          fd.append('customer_id', this.customerId);
          fd.append('activation_code', this.code);
          fd.append('shop', shopDomain);
          console.log('Sending request with shop domain:', shopDomain);
          const res = await fetch(base + '/api/save-activation', { 
            method: 'POST', 
            body: fd
            // Note: Custom headers may be blocked by CORS, so shop is sent in FormData
          });
          const data = await res.json();
          if (!res.ok || data?.success !== true) {
            const err = (data?.errors && data.errors[0]?.message) || data?.error || 'Failed to save';
            this.message = 'Error: ' + err;
          } else {
            this.message = '✅ Activation code saved';
            this.hasExisting = true;
          }
        } catch (e) {
          console.error(e);
          this.message = 'Request failed';
        } finally {
          this.submitting = false;
        }
      }
    }));
  });
  </script>

{% schema %}
{
  "name": "Activation Form",
  "target": "section",
  "settings": [
    // {
    //   "type": "text",
    //   "id": "app_url",
    //   "label": "App URL",
    //   "default": "https://frontend-product-builder.vercel.app"
    // }
  ]
}
{% endschema %}

